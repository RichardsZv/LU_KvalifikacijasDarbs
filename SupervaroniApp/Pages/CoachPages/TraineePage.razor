@page "/supervaronis/{id}"
@attribute [Microsoft.AspNetCore.Authorization.Authorize]
@attribute [Authorize(Roles = "Treneris")]
@using DataAccessLibrary.Models
@using System.ComponentModel.DataAnnotations
@using DataAccessLibrary
@using DataAccessLibrary.Data
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using SupervaroniApp.Components
@using SupervaroniApp.Pages
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject IRunnerData runnerData
@inject IReportData reportData
@inject IDialogService DialogService

<MudGrid>  
    @*Informācija par audzēkni*@
    <MudItem xs="12" sm="12" md="12" lg="6" xl="6" xxl="6">
        <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-8" Color="Color.Tertiary" Style="min-height:25vh; ">
            @*Pamatinformācija*@
            <MudTabPanel Text="Audzēkņa informācija">
                <TraineeInfo id="@id"></TraineeInfo>
            </MudTabPanel>
            @*Testu saraksts*@
            <MudTabPanel Text="Testi">
                <TraineeTests id="@id"></TraineeTests>
            </MudTabPanel>
            @*Sacensību saraksts*@
            <MudTabPanel Text="Sacensības">
                <TraineeRaces id="@id"></TraineeRaces>
            </MudTabPanel>
            @*Traumu saraksts*@
            <MudTabPanel Text="Traumas">
                <TraineeInjuries id="@id"></TraineeInjuries>
            </MudTabPanel>
            @*Personīgo rekordu saraksts*@
            <MudTabPanel Text="Personīgie rekordi">
                <TraineePersonalBests id="@id"></TraineePersonalBests>
            </MudTabPanel>
            <MudIconButton></MudIconButton>
        </MudTabs>
    </MudItem>
    @*Treniņu cikli*@
    <MudItem xs="12" sm="12" md="12" lg="6" xl="6" xxl="6">
        <MudCard Elevation="2" Style="min-height: 25vh;">
            <MudCardHeader Style="background-color: #1ec8a5ff; color: whitesmoke; " Class="d-flex justify-center">
                <MudText Typo="Typo.h6" Color="Color.Default">Treniņu cikli</MudText>
            </MudCardHeader>
            <MudDivider></MudDivider>
            <MudCardContent>
                <MudButton Variant="Variant.Outlined" Color="Color.Tertiary" OnClick="OnCreateCycleClick">Izveidot treniņu ciklu</MudButton>
                <br />
                <MudExpansionPanels Class="mt-6">
                  @foreach(var tc in trainingCycles){
                        <MudExpansionPanel Text="@tc.Title">
                        <MudText>Sākuma datums: @tc.Dat_S.Value.ToShortDateString()</MudText>
                        <MudText>Beigu datums: @tc.Dat_B.Value.ToShortDateString()</MudText>
                      </MudExpansionPanel>
                  }
                </MudExpansionPanels>
            </MudCardContent>
        </MudCard>
    </MudItem>
    @*Atskaite - Plāns*@
    <MudItem xs="12" sm="12" md="12" lg="5" xl="5" xxl="5">
        <MudCard>
            <MudCardHeader Style="background-color: #1ec8a5ff; color: whitesmoke; " Class="d-flex justify-center">
                <MudText Typo="Typo.h6" Color="Color.Default">Treniņu plāns</MudText>
            </MudCardHeader>
            <MudDivider></MudDivider>
            <MudCardContent>
                <MudTable Items="@plannedList" Hover="true" CanCancelEdit="true" SortLabel="Sort By" CommitEditTooltip="Commit Edit"
                        OnCommitEditClick="@(() => HandleRowCommit(selectedItem1))" RowEditPreview="BackupItem" RowEditCommit="ItemHasBeenCommitted" @bind-SelectedItem="selectedItem1" Elevation="2" Class="my-6 py-2 py-4">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Plāns</MudText>
                        <MudSpacer />
                        <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                    </ToolBarContent>
                    <HeaderContent>
                        <MudTh><MudTableSortLabel SortBy="new Func<ReportDataPlannedModel, object>(x=>x.Dat)">Datums</MudTableSortLabel></MudTh>
                        <MudTh>Diena</MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<ReportDataPlannedModel, object>(x=>x.Description)">Ieplānots</MudTableSortLabel></MudTh>
                    </HeaderContent>
                    <RowTemplate >
                        <MudTd DataLabel="Datums">@context.Dat.ToShortDateString()</MudTd>
                        <MudTd DataLabel="Diena">@context.Dat.DayOfWeek.ToString()</MudTd>
                        <MudTd DataLabel="Ieplānots">@context.Description</MudTd>

                    </RowTemplate>

                    <RowEditingTemplate>
                        <MudTd DataLabel="Datums">@context.Dat.ToShortDateString()</MudTd>
                        <MudTd DataLabel="Datums">@context.Dat.DayOfWeek</MudTd>
                        <MudTd DataLabel="Ieplānots">
                            <MudTextField @bind-Value="@context.Description" />
                        </MudTd>
                  
                    </RowEditingTemplate>
                   <PagerContent >
                        <div class="d-flex justify-center">
                            <MudIconButton OnClick="LastWeekClick" Icon="@Icons.Outlined.ArrowCircleLeft" Size="Size.Large"></MudIconButton>
                            <MudIconButton OnClick="NextWeekClick" Icon="@Icons.Outlined.ArrowCircleRight" Size="Size.Large"></MudIconButton>  
                       </div>
                       
                    </PagerContent>
                </MudTable>
            </MudCardContent>
        </MudCard>
    </MudItem>

    @*Atskaite - Realitātē izpildīasi*@
    <MudItem xs="12" sm="12" md="12" lg="7" xl="7" xxl="7">
        <MudCard>
            <MudCardHeader Style="background-color: #1ec8a5ff; color: whitesmoke; " Class="d-flex justify-center">
                <MudText Typo="Typo.h6" Color="Color.Default">Realitātē</MudText>
            </MudCardHeader>
            <MudCardContent>
                  <MudTable Items="@reportDataList" Hover="true" CanCancelEdit="true" SortLabel="Sort By" CommitEditTooltip="Commit Edit"
                        OnCommitEditClick="@(() => HandleRowCommit(selectedItem2))" RowEditPreview="BackupItem" RowEditCommit="ItemHasBeenCommitted" @bind-SelectedItem="selectedItem2" Elevation="2" Class="my-6 py-2 py-4">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Plāns</MudText>
                        <MudSpacer />
                        <MudTextField @bind-Value="searchString2" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                    </ToolBarContent>
                    <HeaderContent>
                        <MudTh><MudTableSortLabel SortBy="new Func<ReportDataPlannedModel, object>(x=>x.Dat)">Datums</MudTableSortLabel></MudTh>
                        <MudTh>Diena</MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<ReportDataPlannedModel, object>(x=>x.Description)">Ieplānots</MudTableSortLabel></MudTh>
                    </HeaderContent>
                    <RowTemplate >
                        <MudTd DataLabel="Datums">@context.Dat.ToShortDateString()</MudTd>
                        <MudTd DataLabel="Diena">@context.Dat.DayOfWeek.ToString()</MudTd>
                        <MudTd DataLabel="Ieplānots">@context.Description</MudTd>

                    </RowTemplate>

                    <RowEditingTemplate>
                        <MudTd DataLabel="Datums">@context.Dat.ToShortDateString()</MudTd>
                        <MudTd DataLabel="Datums">@context.Dat.DayOfWeek</MudTd>
                        <MudTd DataLabel="Ieplānots">
                            <MudTextField @bind-Value="@context.Description" />
                        </MudTd>
                  
                    </RowEditingTemplate>
                   <PagerContent >
                        <div class="d-flex justify-center">
                            <MudIconButton OnClick="LastWeekClick" Icon="@Icons.Outlined.ArrowCircleLeft" Size="Size.Large"></MudIconButton>
                            <MudIconButton OnClick="NextWeekClick" Icon="@Icons.Outlined.ArrowCircleRight" Size="Size.Large"></MudIconButton>  
                       </div>
                       
                    </PagerContent>
                </MudTable>
            </MudCardContent>
        </MudCard>
    </MudItem>
     @*Dienasgrāmata*@
    <MudItem xs="12" sm="12" md="12" lg="12" xl="12" xxl="12">
        <MudCard>
            <MudCardHeader Style="background-color: #1ec8a5ff; color: whitesmoke; " Class="d-flex justify-center">
                <MudText Typo="Typo.h6" Color="Color.Default">Audzēkņa dienasgrāmata</MudText>
            </MudCardHeader>
            <MudCardContent>

            </MudCardContent>
        </MudCard>
    </MudItem>
</MudGrid>


@code {
    [Parameter]
    public string id { get; set; }

    public bool _loading = true;
    RunnerModel runner = new RunnerModel();

    List<ReportModel> trainingCycles = new List<ReportModel>(); 
    ReportModel trainingCycle = new ReportModel(); 
    ReportWeekModel trainingWeek = new ReportWeekModel(); 

    //Plāns
    List<ReportDataPlannedModel> plannedList = new List<ReportDataPlannedModel>();
    private List<string> editEvents1 = new();
    private string searchString1 = "";
    private ReportDataPlannedModel selectedItem1 = null;
    private ReportDataPlannedModel reportBeforeEdit1;
    public int weekNumPl = 0; 
    //Izpilde
    List<CoachReportDataModel> reportDataList = new List<CoachReportDataModel>(); 
    private List<string> editEvents2 = new();
    private string searchString2 = "";
    private CoachReportDataModel selectedItem2 = null;
    private CoachReportDataModel reportBeforeEdit2;
    public int weekNumCo = 0; 

    protected async override Task OnInitializedAsync()
    {
        var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        var user = authstate.User.Identity;
        var runnerInfo = runnerData.GetRunnerById(id); 
        runner = runnerInfo; 
        trainingCycles = reportData.GetTrainingCycles(id); 
        
        if(trainingCycles.Count() != 0){
            //Plāns
            trainingWeek = reportData.GetCurrentWeek(id);
            weekNumPl = trainingWeek.Week_Num;
            plannedList = reportData.GetPlannedReportList(id, weekNumPl );
            //Izpilde
            reportDataList = reprotData.GetCoachReportList(id, weekNumCo); 

        }

        _loading = false; 

    }

    public void OnCreateCycleClick(){
        var parameters = new DialogParameters();
        parameters.Add("runnerid", runner.Id); 
        var options = new DialogOptions()
        {

                CloseOnEscapeKey = true,
                MaxWidth = MaxWidth.Medium,
                FullWidth = true,
            };
        if (runner != null)
        {
            DialogService.Show<CreateTrainingCycleDialog>("Izveidot jaunu treniņu ciklu", parameters, options);
        }
    }

    public void NextWeekClick(){
        weekNumPl = weekNumPl + 1; 
        plannedList = reportData.GetPlannedReportList(id, weekNumPl);
    }
    public void LastWeekClick(){
        weekNumPl = weekNumPl - 1;
        if (weekNumPl > 0)
        {
            plannedList = reportData.GetPlannedReportList(id, weekNumPl);
        }
    }

    private void AddEditionEvent(string message)
    {
        editEvents1.Add(message);
        StateHasChanged();
    }
    private void HandleRowCommit(ReportDataPlannedModel report)
    {
        reportData.UpdatePlannedReports(report);
        StateHasChanged();
    }
    
    private void BackupItem(object report)
    {
        reportBeforeEdit1 = new()
        {
        };
        
    }
    private void ItemHasBeenCommitted(object report)
    {
        AddEditionEvent("Izmaiņas saglabātas");
    }

    //void RemoveItem()
    //{
    //    tests.RemoveAt(0);
    //}

}