@page "/supervaronis/{id}"
@attribute [Microsoft.AspNetCore.Authorization.Authorize]
@attribute [Authorize(Roles = "Treneris")]
@using DataAccessLibrary.Models
@using System.ComponentModel.DataAnnotations
@using DataAccessLibrary
@using DataAccessLibrary.Data
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using SupervaroniApp.Components
@using SupervaroniApp.Components.Tables
@using SupervaroniApp.Pages
@using SupervaroniApp.Components.Dialogs
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject IRunnerData runnerData
@inject IReportData reportData
@inject IDialogService DialogService

<MudGrid>  
    @*Informācija par audzēkni*@
    <MudItem xs="12" sm="12" md="12" lg="size1" xl="size1" xxl="size1">
        <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-8" Color="Color.Tertiary" Style="min-height:25vh; ">
            @*Pamatinformācija*@
            <MudTabPanel Text="Audzēkņa informācija">
                <TraineeInfo id="@id"></TraineeInfo>
            </MudTabPanel>
            @*Testu saraksts*@
            <MudTabPanel Text="Testi">
                <TraineeTests id="@id"></TraineeTests>
            </MudTabPanel>
            @*Sacensību saraksts*@
            <MudTabPanel Text="Sacensības">
                <TraineeRaces id="@id"></TraineeRaces>
            </MudTabPanel>
            @*Traumu saraksts*@
            <MudTabPanel Text="Traumas">
                <TraineeInjuries id="@id"></TraineeInjuries>
            </MudTabPanel>
            @*Personīgo rekordu saraksts*@
            <MudTabPanel Text="Personīgie rekordi">
                <TraineePersonalBests id="@id"></TraineePersonalBests>
            </MudTabPanel>
            <MudIconButton></MudIconButton>
            
        </MudTabs>
        <MudHidden Breakpoint="Breakpoint.MdAndDown" >
            <MudSlider @bind-Value="size1" Min="1" Max="12" Step="1" Color="Color.Tertiary" TickMarks = "true" Immediate = "false" Class="mt-2"> </MudSlider>
        </MudHidden>
    </MudItem>
 
    @*Treniņu cikli*@
    <MudItem xs="12" sm="12" md="12" lg="size2" xl="size2" xxl="size2">
        <MudCard Elevation="2" Style="min-height: 25vh;">
            <MudCardHeader Style="background-color: #1ec8a5ff; color: whitesmoke; " Class="d-flex justify-center">
                <MudText Typo="Typo.h6" Color="Color.Default">Treniņu cikli</MudText>
            </MudCardHeader>
            <MudDivider></MudDivider>
            <MudCardContent>
                <MudButton Variant="Variant.Outlined" Color="Color.Tertiary" OnClick="OnCreateCycleClick">Izveidot treniņu ciklu</MudButton>
                <br />
                <MudExpansionPanels Class="mt-6">
                  @foreach(var tc in trainingCycles){
                        <MudExpansionPanel Text="@tc.Title">
                        <MudText>Sākuma datums: @tc.Dat_S.Value.ToShortDateString()</MudText>
                        <MudText>Beigu datums: @tc.Dat_B.Value.ToShortDateString()</MudText>
                        <MudDivider/>
                            <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-8" Color="Color.Tertiary" Style="min-height:25vh; ">
                                <MudTabPanel Text="Cikla Summārās vērtības">
                                    <SumCoachReportTable id="@tc.Id.ToString()" />
                                </MudTabPanel>
                                <MudTabPanel Text="Cikla vidējās vērtības">
                                    <AvgCoachReportDataTable id="@tc.Id.ToString()" />
                                </MudTabPanel>
                            </MudTabs>
                         <MudSpacer />
                        <MudIconButton OnClick="@(()=> HandleDeleteCycleClick(tc.Id))" Color="@Color.Error" Icon="@Icons.Filled.Delete" Title="Dzēst treniņu ciklu"></MudIconButton>
                      </MudExpansionPanel>
                  }
                </MudExpansionPanels>
            </MudCardContent>
        </MudCard>
        <MudHidden Breakpoint="Breakpoint.MdAndDown">
            <MudSlider @bind-Value="size2" Min="1" Max="12" Step="1" Color="Color.Tertiary" TickMarks="true" Immediate="false" Class="mt-2"> </MudSlider>
        </MudHidden>
    </MudItem>
    @*Audzēkņa dienasgrāmata*@
    <MudItem xs="12" sm="12" md="12" lg="size3" xl="size3" xxl="size3">
        <MudCard>
            <MudCardHeader Style="background-color: #1ec8a5ff; color: whitesmoke; " Class="d-flex justify-center">
                <MudText Typo="Typo.h6" Color="Color.Default">Audzēkņa dienasgrāmata</MudText>
            </MudCardHeader>
            <MudCardContent>
                <TraineeReportTable id="@id" />
            </MudCardContent>
        </MudCard>
        <MudHidden Breakpoint="Breakpoint.MdAndDown">
            <MudSlider @bind-Value="size3" Min="1" Max="12" Step="1" Color="Color.Tertiary" TickMarks="true" Immediate="false" Class="mt-2"> </MudSlider>
        </MudHidden>
    </MudItem>
    @*Atskaite - Plāns*@
    <MudItem xs="12" sm="12" md="12" lg="size4" xl="size4" xxl="size4">
        <MudCard>
            <MudCardHeader Style="background-color: #1ec8a5ff; color: whitesmoke; " Class="d-flex justify-center">
                <MudText Typo="Typo.h6" Color="Color.Default">Treniņu plāns</MudText>
            </MudCardHeader>
            <MudDivider></MudDivider>
            <MudCardContent>
                <PlannedReportTable id="@id"/> 
            </MudCardContent>
        </MudCard>
        <MudHidden Breakpoint="Breakpoint.MdAndDown">
            <MudSlider @bind-Value="size4" Min="1" Max="12" Step="1" Color="Color.Tertiary" TickMarks="true" Immediate="false" Class="mt-2"> </MudSlider>
        </MudHidden>
    </MudItem>

    @*Atskaite - Realitātē izpildīasi*@
    <MudItem xs="12" sm="12" md="12" lg="size5" xl="size5" xxl="size5">
        <MudCard>
            <MudCardHeader Style="background-color: #1ec8a5ff; color: whitesmoke; " Class="d-flex justify-center">
                <MudText Typo="Typo.h6" Color="Color.Default">Realitātē</MudText>
            </MudCardHeader>
            <MudCardContent>
                <CoachReprotTable id="@id"/>
            </MudCardContent>
        </MudCard>
        <MudHidden Breakpoint="Breakpoint.MdAndDown">
            <MudSlider @bind-Value="size5" Min="1" Max="12" Step="1" Color="Color.Tertiary" TickMarks="true" Immediate="false" Class="mt-2"> </MudSlider>
        </MudHidden>
    </MudItem>
     
   
</MudGrid>


@code {
    [Parameter]
    public string id { get; set; }
    public bool _loading = true;
    RunnerModel runner = new RunnerModel();

    List<ReportModel> trainingCycles = new List<ReportModel>(); 
    ReportModel trainingCycle = new ReportModel(); 
    ReportWeekModel trainingWeek = new ReportWeekModel();

    //noklusetās sadaļu izmēru vērtības
    public int size1 { get; set; } = 12; 
    public int size2 { get; set; } = 12; 
    public int size3 { get; set; } = 12; 
    public int size4 { get; set; } = 12; 
    public int size5 { get; set; } = 12; 

    private Transition transition = Transition.Slide;

    protected async override Task OnInitializedAsync()
    {
        var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        var user = authstate.User.Identity;
        var runnerInfo = runnerData.GetRunnerById(id); 
        runner = runnerInfo; 
        trainingCycles = reportData.GetTrainingCycles(id); 
        _loading = false; 
    }

    public void OnCreateCycleClick()
    {
        var parameters = new DialogParameters();
        parameters.Add("runnerid", runner.Id);
        var options = new DialogOptions()
            {
                CloseOnEscapeKey = true,
                MaxWidth = MaxWidth.Medium,
                FullWidth = true,
            };
        if (runner != null)
        {
            DialogService.Show<CreateTrainingCycleDialog>("Izveidot jaunu treniņu ciklu", parameters, options);
        }
    }
    
    public void HandleDeleteCycleClick(int cycle_id){
        if(cycle_id != null){
            reportData.DeleteCycle(runner.Id.ToString(), cycle_id);
            trainingCycles = reportData.GetTrainingCycles(id); 
        }
        StateHasChanged(); 
    }
}