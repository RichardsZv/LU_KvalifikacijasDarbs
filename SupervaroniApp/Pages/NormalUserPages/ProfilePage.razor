@page "/profils"
@using System.ComponentModel.DataAnnotations
@using DataAccessLibrary
@using DataAccessLibrary.Data
@using DataAccessLibrary.Models
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject IRunnerData runnerData

<EditForm Model="@runner" OnValidSubmit="OnValidSubmit">
<DataAnnotationsValidator/>
    <MudGrid>

        <MudItem xs="12" sm="7">
            <MudCard>
                <MudText Typo="Typo.h6" Align="Align.Center">Informācija par mani</MudText>
                <MudCardContent>
                    <MudTextField Label="Vārds" @bind-Value="runner.Firstname"/>
                    <MudTextField Label="Uzvārds" @bind-Value="runner.Lastname"  />
                    <MudTextField Label="E-pasts" @bind-Value="runner.Email"  />
                    <MudDatePicker Label="Dzimšanas datums" @bind-Date="runner.Birthdate" />
                    <MudSelect T="RunnerModel.Gender" Label="Dzimums" @bind-Value="runner.enumValue">
                         @foreach (RunnerModel.Gender item in Enum.GetValues(typeof(RunnerModel.Gender)))
                            {
                                <MudSelectItem Value="@item">@item</MudSelectItem>
                            }
                    </MudSelect>
                    <MudNumericField Label="Augums" @bind-Value="runner.Height" />
                    <MudNumericField Label="Svars" @bind-Value="runner.Weight"  />
                    <MudNumericField Label="Miera pulss" @bind-Value="runner.Hr"  />
                    <MudNumericField Label="Maksimālais pulss" @bind-Value="runner.Hr_max"  />
                    
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto ">Saglabāt</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
   
    </MudGrid>
</EditForm>


@code {
    RunnerModel runner = new RunnerModel(); 

    protected async override Task OnInitializedAsync()
    {
        var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        var user = authstate.User.Identity;
        runner = runnerData.GetCurrentRunner(user.Name);
    }


    private void OnValidSubmit(EditContext context)
    {
        runnerData.SaveRunner(runner); 

    }
}
